https://www.hackerrank.com/challenges/tree-top-view/problem

Given a pointer to the root of a binary tree, print the top view of the binary tree.

The tree as seen from the top the nodes, is called the top view of the tree.

For example :

   1
    \
     2
      \
       5
      /  \
     3    6
      \
       4
  outout - > 1 2 5 6
  
       1
      /  \ 
     2    3
    / \  /. \
    4 5. 6.  7
    
    output - >> 4 2 1 3 7
    
    
    
    
    solution:
    
    
    import java.util.*;
import java.io.*;

class Node {
    Node left;
    Node right;
    int data;
    
    Node(int data) {
        this.data = data;
        left = null;
        right = null;
    }
}

class Solution {

	
    
    class Node 
    	int data;
    	Node left;
    	Node right;

    
    static class pair{
        int node;
        int level;
        
        pair(){};
        pair(int i, int j){
            node = i;
            level = j;
        }
    }
    static TreeMap<Integer, pair> map = new TreeMap<>();  // Used treemap because its sorted map
	  public static void topView(Node root) {
        
        topViewUtil(root, 0, 0);
        int arr [] = new int[map.size()];
        for (Map.Entry<Integer, pair> m: map.entrySet()){
            System.out.print(m.getValue().node+ " ");
        
        }
    }
    
    public static void topViewUtil(Node root, int dist, int lvl){
        if(root == null) return;
        
        if (!map.containsKey(dist) || map.get(dist).level > lvl)
            map.put(dist, new pair(root.data, lvl));
        topViewUtil(root.left, dist - 1, lvl + 1);
        topViewUtil(root.right, dist + 1, lvl + 1);
        
         
            
    }
